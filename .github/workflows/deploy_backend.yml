name: Deploy Backend and Frontend

on:
  push:
    branches:
      - feat/code-base

jobs:
  backend:
    name: ðŸš€ Deploy Backend to Cloud Run
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker asia-east1-docker.pkg.dev --quiet

      - name: Build Docker image
        run: |
          IMAGE=asia-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/toilet-api/toilet-api
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          docker build -t $IMAGE ./Backend

      - name: Push Docker image
        run: docker push $IMAGE

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy toilet-api \
            --image $IMAGE \
            --region asia-east1 \
            --platform managed \
            --project ${{ secrets.GCP_PROJECT_ID }} \
            --allow-unauthenticated \
            --service-account toilet-api-executor@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com

  frontend:
    runs-on: ubuntu-latest
    name: âœ¨ Deploy to Vercel
    steps:
      - name: ðŸ“† Checkout Repo
        uses: actions/checkout@v3

      - name: âœ¨ Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: Frontend/package-lock.json

      - name: ðŸ“¦ Install dependencies
        run: npm install
        working-directory: Frontend

      - name: ðŸš€ Build project (optional if handled by Vercel)
        run: npm run build
        working-directory: Frontend

      - name: ðŸšœ Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prod --confirm --yes'
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./Frontend
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
